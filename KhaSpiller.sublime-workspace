{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ma",
				"math	package"
			],
			[
				"lo",
				"Loader	class"
			],
			[
				"P",
				"Point"
			],
			[
				"FlxS",
				"FlxState	class"
			],
			[
				"FlxG",
				"FlxGame	class"
			],
			[
				"M",
				"Matrix"
			],
			[
				"Flx",
				"FlxObject"
			],
			[
				"h",
				"height"
			],
			[
				"fl",
				"Flixel"
			],
			[
				"reset",
				"Reset"
			],
			[
				"fun",
				"function"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 327.0,
		"last_filter": "haxe",
		"selected_items":
		[
			[
				"haxe",
				"Haxe: Choose Build Target"
			],
			[
				"Haxe",
				"Haxe: Choose Build Target"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"grunt",
				"Grunt"
			],
			[
				"grun",
				"Grunt"
			],
			[
				"gurn",
				"Grunt: Kill Running Tasks"
			],
			[
				"Gru",
				"Grunt"
			],
			[
				"gr",
				"Grunt"
			],
			[
				"g",
				"Grunt"
			],
			[
				"Grunt",
				"Grunt"
			],
			[
				"grn",
				"Grunt"
			],
			[
				"Grun",
				"Grunt"
			],
			[
				"Gr",
				"Grunt"
			],
			[
				"GR",
				"Grunt"
			],
			[
				"Griun",
				"Grunt: Kill Running Tasks"
			],
			[
				"Ins",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		""
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"BitmapData",
			"Rectangle",
			"BitmapData",
			"Point",
			"Assets",
			"Assets.getText",
			"Assets",
			"Assets.getText(Description)",
			"Assets.exists(Description)",
			"Assets",
			"room",
			"Assets",
			"BitmapData",
			"Tilesheet",
			"Matrix",
			"Point",
			":Point",
			"Point",
			"BitmapData",
			"Matrix",
			"FlxFrame",
			"colorTransform",
			"ColorTransform",
			"BlendMode",
			"Stage",
			"DisplayObject",
			"Stage",
			"full_screen",
			"full",
			"fullscreen",
			"StageDisplayState",
			"Lib",
			"loadURL",
			"URL",
			"URLRequest",
			"pixelPerfectPosition",
			"defaultPixelPerfectPosition",
			"FlxTilesheet",
			".setScreen",
			"Configuration.setScreen",
			"Configuration",
			"addTimeTask",
			"addChild",
			"Sprite",
			"Bitmap",
			"BitmapData",
			"Sprite",
			"FLX_POST_PROCESS",
			"Sprite",
			"StageAlign",
			"StageScaleMode",
			"_inputContainer",
			"TargetRectangle",
			"StageScaleMode",
			"Event",
			"FocusEvent",
			"ColorTransform",
			"Matrix",
			"Lib",
			"Rectangle",
			"Point",
			"Assets",
			"Bitmap",
			"FLX_RENDER_TRIANGLE",
			"FLX_MOUSE_ADVANCED",
			"Graphics",
			"onResize",
			"Bitmap",
			"FLX_RENDER_TILE",
			"FLX_RENDER_CRISP",
			"FLX_RENDER_TILE",
			"FLX_RENDER_CRISP",
			"Bitmap",
			"getTimer",
			"update(",
			"colorTransform",
			"_colorTransform",
			"ColorTransform",
			"DisplayObject",
			"URLRequest",
			"Matrix",
			"URLRequest",
			"Lib",
			"BitmapData",
			"Point",
			"BitmapData",
			"resumeAudio",
			"caja",
			"arbol",
			"MenuState",
			"onm",
			"foundLaunchpad",
			"foundLaunch",
			"set(index",
			"this.",
			"onPowerup",
			"getFrame()",
			"getFrame()?(this.player",
			"Flixel.FlxG.getState().spawnPowerup(x, y)",
			"Flixel.FlxG.getState().spawnPowerup(x,y)",
			"bombsDec",
			"Assets.map",
			"emptyColor",
			"this.bombbox.",
			"healthBoxes",
			"healthBoxesthis",
			"healthBoxes",
			"ceil",
			"ImgFootsteps",
			"states",
			"},",
			"new int[]{",
			"Spi"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Image",
			"Loader.the.getBlob",
			"Loader.the.getBlob(Description)",
			"Loader.the.isBlobAvailable(Description)",
			"Matrix3",
			"Vector2",
			"Image",
			"Matrix3",
			"Canvas",
			"Vector2",
			"Canvas",
			"rock",
			"caja",
			"PlayState",
			"pruebald",
			"",
			"entities",
			"]",
			"[",
			"Flixel.Flx"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 234.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "KhaSpiller.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 291.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
